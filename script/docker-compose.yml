version: '3.7'

services:
  # MariaDb 即係 mySQL，不過都係用 postgreSQL 好啲
  # db:
  #   image: mariadb
  #   container_name: db-server
  #   networks:
  #     - nextcloud
  #   # only open the port if you need external management
  #   ports:
  #     - ${DB_VIRTUAL_PORT}:3306
  #   volumes:
  #     - mysql_data:/var/lib/mysql   如果用，記得喺下面 volumes: 加番
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #     MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
  #     MYSQL_USER: $DB_USER
  #     MYSQL_PASSWORD: $DB_PASSWORD
  #     MYSQL_DATABASE: $DB_NAME
  #   restart: always

  postgres:
    image: postgres
    container_name: pg-server
    networks:
      - nextcloud
    ports:
      - ${PG_VIRTUAL_PORT}:5432   # 放個 port 出嚟，可以用 DBeaver 直接 access 個 database
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $PG_USER
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_DB: $PG_NAME
    restart: always

  app:
    container_name: app-server
    image: nextcloud:fpm    # NC 23.0.1
    restart: always
    depends_on:
      - nginx
      - postgres
    networks:
      - nextcloud
    expose:
      - '80'
      - '9000'
    volumes:
      - app_data:/var/www/html
      - /etc/localtime:/etc/localtime:ro
      
  onlyoffice-document-server:
    container_name: onlyoffice-server
    image: onlyoffice/documentserver:latest
    restart: always
    networks:
      - nextcloud
    expose:
      - '80'
      - '443'
    volumes:
      - document_data:/var/www/onlyoffice/Data
      - document_log:/var/log/onlyoffice

  nginx:
    container_name: nginx-server
    image: nginx
    restart: always
    networks:
      - nextcloud
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - app_data:/var/www/html

  # phpMyAdmin is optional, un-comment and edit .env variables to install
  # pma:
  #   container_name: pma-server
  #   image: phpmyadmin/phpmyadmin
  #   depends_on:
  #     - db
  #   restart: always
  #   ports:
  #     - ${PMA_VIRTUAL_PORT}:80
  #   environment:
  #     PMA_HOST: $DB_CONTAINER
  #     MYSQL_ROOT_PASSWORD: $PMA_ROOT_PASSWORD

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0   # ElasticSearch 升級 Nextcloud 未必即時跟進，都係 lock 個版本穩陣
    container_name: es-server
    networks:
      - nextcloud
    expose:
      - '9200'
      - '9300'
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true  # along with the memlock settings below, disables swapping
      - "ES_JAVA_OPTS= -Xms16G -Xmx16G" # reserve 16GB RAM (half host memory)
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - es_config:/usr/share/elasticsearch/config
    - es_data:/usr/share/elasticsearch/data
    - es_plugins:/usr/share/elasticsearch/plugins
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
    # mem_reservation: 6291456000

    # 有 permission error，要手動安裝
    # command: ['sh', '-c', './bin/elasticsearch-plugin list | grep -q ingest-attachment || bin/elasticsearch-plugin install --batch ingest-attachment']

  # 用嚟𥄫實隻 ElasticSearch，唔裝都得嘅
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0   # 個版本一定要同 ElasticSearch 相同
    container_name: es-kibana
    networks:
      - nextcloud
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: http://es-server:9200
      ELASTICSEARCH_HOSTS: http://es-server:9200
    volumes:
      - es_kibana:/usr/share/kibana/config

volumes:
  app_data:
  document_data:
  document_log:
  es_config:
  es_data:
  es_kibana:
  es_plugins:
  postgres_db:

networks:
  nextcloud:
    name: $VIRTUAL_NETWORK
    driver: 'bridge'